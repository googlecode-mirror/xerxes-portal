<?php

/**
 * 
 */

class Xerxes_Command_ChooseCategorySkip extends Xerxes_Command_Collections
{
	/**
	 * Prior to displaying a category choice dialog, do we even have any category
   * to choose from? If just one, skip that choice dialog. if 0, create one,
   * and skip dialog. 
   *
   * Assumes that you ran ListUserCategories command before this command, checks
   * XML generated by ListUserCategories. 
   *
   *
	 * @param Xerxes_Framework_Request $objRequest
	 * @param Xerxes_Framework_Registry $objRegistry
	 * @return int status
	 */
	
	public function doExecute(Xerxes_Framework_Request $objRequest, Xerxes_Framework_Registry $objRegistry)
	{
		
    $strUsername = $objRequest->getProperty("username");            
    
    // Make sure they are logged in as the user they are trying to save as. 
    Xerxes_Helper::ensureSpecifiedUser($strUsername, $objRequest, $objRegistry, "You must be logged in as $strUsername to save to a personal database collection owned by that user.");
    
    $objData = new Xerxes_DataMap();
    
    $existingCategoryNames = $objRequest->getData('/*/userCategories/category/normalized', null, 'ARRAY');
    
    if ( count($existingCategoryNames) <= 1) {
      if ( count($existingCategoryNames) == 1) {
        $normalized_name = $existingCategoryNames[0]; 
      }
      else {
        //Create a new one.      
        $strNewSubject = $objRegistry->getConfig("default_collection_name", false, "My Saved Databases");
        $strNormalizedSubject = Xerxes_Data_Category::normalize($strNewSubject);
        
        $newCategory = new Xerxes_Data_Category();
        $newCategory->name = $strNewSubject;
        $newCategory->username = $strUsername;
        $newCategory->normalized = $strNormalizedSubject;
        $newCategory->published = 0;
        $newCategory = $objData->addUserCreatedCategory($newCategory);
        
        $normalized_name = $newCategory->normalized;
      }
      
      // Redirect past the category selection page. 
      $fixedUrl = $objRequest->url_for( array( "base" => "collections",
                         "action" => "save_choose_subheading",
                         "subject" => $normalized_name,
                         "id" => $objRequest->getProperty("id"),
                         "username" => $objRequest->getProperty("username"),
                         "return" => $objRequest->getProperty("return")
                         ),
                        true // force full url for redirect
                        );
      $objRequest->setRedirect(  $fixedUrl  );   
      
    }
        
			
		return 1;
	}
}
?>